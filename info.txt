- расстояние между плашками выводов модуля DDS AD9850 = 20.5 мм
	2.52 - расстояние между выводвми
- проверить как работает NE5534 при питании от 5 V
	- будет работать, никуда не денется!

- емкость диодов, которыми мы будем переключать входные фильтры

- нарисовать схему где будет 
	аналоговая часть
		детектор на 74HC4053+74HC74
		усилители на NE5534
	цифровая часть
	усилитель высокой частоты на BFG135
	пины для AD9850 платки
	пины для переключения входного фильтра на разные диапазоны

- пересчитаетм параметры для BFG135 транзистора, для его питания от 5 V напряжения.
	Rk - сопротивление между питанием и коллектором.
	Rbk - сопротивление между базой и коллектором.
	Rbe - сопротивление между базой и землей.
	B = Hfe = DC cureent gain = 130
	V - напряжение питание
	Vk - напряжение на коллекторе
	Vb = 0.7 - напряжение на базе
	Ik, Ib - соответственно токи на коллекторе и базе транзистора.
	Iksum, Ibsum - суммарный ток, с учетом резисторов.
	
	Vk = V - Iksum * Rk
	Ik = Hfe*Ib
	Iksum = Ik+Ibsum
	Ibsum = Ib+Vb/Rbe
	Vk-Vb = Ibsum*Rbk
	Vb = 0.7
	

	Избавимся от Ibsum 
	Для удобства пусть Irbe = Vb/Rbe
	Vk = V - Iksum * Rk
	Ik = Hfe*Ib
	Iksum = Ik+Ib+Irbe
	Vk-Vb = (Ib+Irbe)*Rbk
	
	Избавимся от Iksum 
	Vk = V - (Ik+Ib+Irbe) * Rk
	Ik = Hfe*Ib
	Vk-Vb = (Ib+Irbe)*Rbk
	
	Избавимся от Ib
	Vk = V - (Ik+Ik/Hfe+Irbe) * Rk
	Vk-Vb = (Ik/Hfe+Irbe)*Rbk
	
	Избавимся от Vk
	V - (Ik+Ik/Hfe+Vb/Rbe) * Rk = (Ik/Hfe+Vb/Rbe)*Rbk+Vb
	V - Ik*((1+1/Hfe)*Rk-Rbe/Hfe) = Vb/Rbe*Rbk-Vb*Rk/Rbe+Vb
	V - Vb*(Rbk/Rbe-Rk/Rbe+1) = Ik*((1+1/Hfe)*Rk-Rbe/Hfe)
	Ik = (V - Vb*((Rbk-Rk)/Rbe+1))/((1+1/Hfe)*Rk-Rbe/Hfe)
	
	V - (Ik+Ik/Hfe+Irbe) * Rk = Vb + (Ik/Hfe+Irbe)*Rbk
	V - Vb-Irbe*Rbk - (Ik+Ik/Hfe+Irbe) * Rk = Ik*Rbk/Hfe
	V - Vb-Irbe*Rbk-Irbe*Rk = Ik*Rbk/Hfe+(Ik+Ik/Hfe)*Rk
	V - Vb-Irbe*Rbk-Irbe*Rk = Ik*(Rbk/Hfe+(1+1/Hfe)*Rk)
	Ik = (V-Vb-Irbe*Rbk-Irbe*Rk)/(Rbk/Hfe+(1+1/Hfe)*Rk)
	
----------------
- нужна ли катушка L1 (и конденсатор С2)? --убрали
	если мы перед смесителем поставим радиокаскад, у которого в коллекторе сопротивление 33 Ом, то наличие этой катушки вызывает боольшие сомнения.
	
- запустить AD9850 на тестовой какой либо платке
- добавить соединение по SPI между микроконтроллером и DDS --ok

- воспользоваться тем, что у нас вся bootom - это земля и подключать туда напрямую все, пусть и с большим количеством отверстий.
- для настройки после 74AC74 поставить пару штырьков для подкоючения осциллографа
- прикупить корпус и уже под него проектировать размеры
	нужно максимально отдалить аналоговую часть от генератора и цифровой части
	
- 78x61 мм

- забыли две дырочки припаять, на выход осциллографа! --ok
- допаять схемку до состояния, когда можно будет с AD9850 общаться --ok


При отсутствии резистора R2 получилось
Vb = 0.8
Vk = 1.98
Vpit = 4.91 

Vk = 3.27
Vpit = 4.95


- сделать обычный USB

- измерить ток, поставить какую-либо частоту и глянуть что выдает генератор на выходе


- пока напаяем так 
 C1, C5 = 220 pF
 C3 = 470 pF
 L1, L2 = 560 nH

- для компаратора на выходе переменного резистора R13 нужно примерно 0.5 V
  то есть между VCC и R13 нужно резистор 40 КОм поставить
  тогда скважность можно будет точно регулировать


- gnuradio-companion
  gqrx
  SdrDx

- 
	3.680  - морзянка

	3.954.700*3
	11 955 КГц - мощная радиостанция
	7350 - мощная радиостанция

	4278 - морзянка
	4331-4337 - мощьный сигнал
	4480-4487 - гуделка

	Закончили на 5415

	услышали радиолюбителя! -
	14165
	14195.500
	14145

	3951

	14186 R1DP

	14178.5 РадиоX R38G59

	19 июля 
	17:10 14153 RM4HZ 
	17:49 14176 RA6EV

	22.58 3644 UD6BNB 

	20 июля
	21:50 7129 1 КВт

	22:05 18133 N3ZA
	22:07 14158 UA6GA 100 Вт + UA1VD 100 Вт
				RG2F

	22:15 14188	TA3G

	23:27 14166 OR5POP Austria
	23:43 14185 Sierra Sierra Radio 

	23:52 14147 ZL1ZGS

	21 июля
	23:03 14225 
	23:06 18119 ZN3ZNR
	23:10 18126 


- антенна
	размеры чердака
		высота 290 см
		половина ширины 460 см 

	27 июля
	20:28 7120 

	10100.5 - 10101 двутональный сигнал цифровой

- 9 августа 2014 г
	22:48 14.155 
	22:53 7.138
	22:55 7.173 ONQ 
	23:03 3.624
	23:04 3.658
	23:14 14.155
	23:17 14.164 RR4HN?
	23:20 14.173 RV4HMZ

	10.115 - 10.135

- 10 августа
	18:21 14.204
	18.23 7.105

	21:32 7144 RK6BR
	21:32 7148 RU4AA

- 23 августа
	14.155 R6LP
	14.170 RK4PL
	14.155 UA4RAK
	14.144 UA4ЦOA
	14.170 RA4
	14.140 UA4ЦOM
	14.142 RK6BBN
	14.168 RN3TJ


- немного повторим теорию
	sin(a+pi/2) = cos(a)
	cos(a+pi/2) = -sin(a)
	sin(a+b) = sin(a)*cos(b)+cos(a)*sin(b)

	cos(a+b) = sin(a+b+pi/2) = sin(a+pi/2)*cos(b)+cos(a+pi/2)*sin(b) = cos(a)*cos(b)-sin(a)*sin(b)
	cos(a+b) = cos(a)*cos(b)-sin(a)*sin(b)

	sin(a)*cos(b) = 0.5*(sin(a+b)+sin(a-b))
	cos(a)*cos(b) = 0.5*(cos(a+b)+cos(a-b))



	Умножение на сигналы гетеродина
		F - частота станции
		fi - фазовый сдвиг частоты станции
		G - частота гетеродина
		gi - фазовый сдвиг частоты гетеродина
		cos(F*t+fi)*cos(G*t+gi) = 0.5*(cos((F+G)*t+fi+gi) + cos((F-G)*t+fi-gi) )


- собственная SDR программа
	- пустить один из каналов с входа (из радиоприемника) на выход 48000 КГц --ok
	- определять пиковую громкость и плавно ее менять --ok
	- читать данные с USB звуковой карты --ok
	- изменение частоты вывести в виджет, чтобы удобно было перестраиваться без SdrDx
		- комбобокс начальных частот для любительских диапазонов
			18.102
			14.142
			10.092
			7.117
			5.322
			3.592
		- грубый по 1 КГц
		- точный по 50 Гц
	- найти какую либо громкую SSB станцию и по ней настраивать SDR алгоритм

	- нижняя частота среза 10 КГц
		9800 Гц пускай будет промежуточная частота (примерно)

	- 14 133 600 -eng
	- 14 138 400 -bel

	- ускорить iir фильтр
		- сделать процетуру оуенки скорости
		- развернуть цикл, учитывая что многие коэффициэнты нулевые
		- не делать постоянного копирования коэффициэнтов, увеличить размер буфера и копировать только тогда, когда дойдет до начала.

	- profile
		100000 samples
		- debug profile time=2.777720e-02
		- release profile time=8.771736e-03


- STM32F405RGT6 LQFP64
	SPI2 - через него будет идти i2s поток
	команды будем через софтварный SPI пересылать,
	так ка SPI1 нужен для общения с другим процессором, а на SPI3 не хватает нормальных ножек

	PA13/PA14 не занимать

	SPI2_MISO / 2S2ext_SD- PC2 10
	SPI2_MOSI / I2S2_SD  - PC3 11
	SPI1_NSS / SPI3_NSS  - PA4 20 *
	SPI1_SCK             - PA5 21 *
	SPI1_MISO            - PA6 22 *
	SPI1_MOSI            - PA7 23 *
	SPI2_SCK             - PB10 29

	SPI2_NSS             - PB12 33 *
	SPI2_SCK             - PB13 34 *
	SPI2_MISO            - PB14 35 *
	SPI2_MOSI            - PB15 36 *

	SPI3_NSS             - PA15 (JTDI) 50
	SPI3_SCK             - PC10 51
	SPI3_MISO            - PC11 52
	SPI3_MOSI            - PC12 53
	SPI3_SCK / SPI1_SCK  - PB3 (JTDO) 55
	SPI3_MISO / SPI1_MISO- PB4 (NJTRST) 56
	SPI3_MOSI / SPI1_MOSI- PB5 57
	SPI2_NSS             - PB9 62

	PC2 - I2S2ext_SD
	PC3 - I2S2_SD
	PA4 - I2S3_WS

	PB9 - I2S2_WS 
	PB10 - I2S2_CK 
	PB12 - I2S2_WS
	PB13 - I2S2_CK
	PB14 - I2S2ext_SD

	PB15 - I2S2_SD
	PC6 - I2S2_MCK 
	PC7 - I2S3_MCK 
	PC9 - I2S_CKIN

	PA15 - I2S3_WS
	PC10 - I2S3_CK
	PC11 - I2S3ext_SD
	PC12 - I2S3_SD

	PB3 - I2S3_CK
	PB4 - I2S3ext_SD
	PB5 - I2S3_SD



	PB10 - I2C2_SCL
	PB11 - I2C2_SDA
	PB12 - I2C2_SMBA
	PC9 - I2C3_SDA 
	PA8 - I2C3_SCL
	PA9 - I2C3_SMBA
	PB6 - I2C1_SCL
	PB7 - I2C1_SDA
	PB8 - I2C1_SCL
	PB9 - I2C1_SDA 


	PA4 - DAC_OUT1
	PA5 - DAC_OUT2

	PA5,6,7 - SPI1 для общения c модулем дисплея

	PB6, PB7 - I2S для общения с CS4272
	PA15, PC10, PC11, PC12 - I2S3 для общения с CS4272
	RST на PD2 ?

	- таки прежде чем разводить, надо будет получить данные из демоплатки

- VCOM это 2.5 V у CS4272!!!!!


- из чего состоит плата
	STM32F405RGT6 - центральный DSP процессор (90 мА потребление в худшем случае)
	CS4272 - ADC 24 bit
	AD8605 - усилитель для наушников
	REG1117 - 3.3 V регулятор мощный
	на 5 V тоже по хорошему надо регулятор, ибо предполагается батарейное питание от 6 V,
	пускай будет на отдельной плате. Но предусмотрим 2 входа питания 5V, чтобы была возможность
	подать слабое питание туда.

	Может импульсный Step Down на 3.3V, чтобы было экономно?

	NE5534 - низкошумящие усилители на вход ADC
	Неплохо бы применить TS464CPT вместо NE5534.
	Пускай будут на плате смесителя. Тогда модуль ADC будет одинаковый для ППП и векторного анализатора.


	SPI1_NSS - PA4 20 *
	SPI1_SCK - PA5 21 *
	SPI1_MISO- PA6 22 *
	SPI1_MOSI- PA7 23 *

- разделить аналоговую и цифровую земли около CS4272 --ok

- начать писать код для STM32F405
	- вывести синус на DAC2
	- запустить CS4272
	- попытаться сделать тактирование DAC2 от CS4272
	- сделать, чтобы данные с CS4272 передавались на DAC2
	- запустить SPI в SLAVE mode и сделать общение  модулем дисплея





